// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e,r,t,n,o,a,i,u="function"==typeof Object.defineProperty?Object.defineProperty:null,l=u,f=l,c=function(){try{return f({},"x",{}),!0}catch(e){return!1}},_=Object.defineProperty,p=_,b=Object.prototype,y=b.toString,d=b.__defineGetter__,s=b.__defineSetter__,v=b.__lookupGetter__,j=b.__lookupSetter__,g=function(e,r,t){var n,o,a,i;if("object"!=typeof e||null===e||"[object Array]"===y.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===y.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((o="value"in t)&&(v.call(e,r)||j.call(e,r)?(n=e.__proto__,e.__proto__=b,delete e[r],e[r]=t.value,e.__proto__=n):e[r]=t.value),a="get"in t,i="set"in t,o&&(a||i))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return a&&d&&d.call(e,r,t.get),i&&s&&s.call(e,r,t.set),e},m=c,w=p,h=g;e=m()?w:h,r=e,t=5,n=5,function(e,t,n){r(e,t,{configurable:!1,enumerable:!1,writable:!1,value:n})}(o=function(e,r,n,o,a){var i,u,l,f,c=0;if(e<=0)return c;if(1===n&&1===a){if((l=e%t)>0)for(f=0;f<l;f++)c+=r[f]*o[f];if(e<t)return c;for(f=l;f<e;f+=t)c+=r[f]*o[f]+r[f+1]*o[f+1]+r[f+2]*o[f+2]+r[f+3]*o[f+3]+r[f+4]*o[f+4];return c}for(i=n<0?(1-e)*n:0,u=a<0?(1-e)*a:0,f=0;f<e;f++)c+=r[i]*o[u],i+=n,u+=a;return c},"ndarray",a=function(e,r,t,o,a,i,u){var l,f,c,_,p=0;if(e<=0)return p;if(l=o,f=u,1===t&&1===i){if((c=e%n)>0)for(_=0;_<c;_++)p+=r[l]*a[f],l+=1,f+=1;if(e<n)return p;for(_=c;_<e;_+=n)p+=r[l]*a[f]+r[l+1]*a[f+1]+r[l+2]*a[f+2]+r[l+3]*a[f+3]+r[l+4]*a[f+4],l+=n,f+=n;return p}for(_=0;_<e;_++)p+=r[l]*a[f],l+=t,f+=i;return p}),i=o;export{i as default,a as ndarray};
//# sourceMappingURL=mod.js.map
