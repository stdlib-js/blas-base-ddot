{"version":3,"file":"index.mjs","sources":["../lib/ddot.js","../lib/ndarray.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 5;\n\n\n// MAIN //\n\n/**\n* Computes the dot product of `x` and `y`.\n*\n* @param {PositiveInteger} N - number of values over which to compute the dot product\n* @param {Float64Array} x - first input array\n* @param {integer} strideX - `x` stride length\n* @param {Float64Array} y - second input array\n* @param {integer} strideY - `y` stride length\n* @returns {number} dot product of `x` and `y`\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n*\n* var x = new Float64Array( [ 4.0, 2.0, -3.0, 5.0, -1.0 ] );\n* var y = new Float64Array( [ 2.0, 6.0, -1.0, -4.0, 8.0 ] );\n*\n* var z = ddot( x.length, x, 1, y, 1 );\n* // returns -5.0\n*/\nfunction ddot( N, x, strideX, y, strideY ) {\n\tvar dot;\n\tvar ix;\n\tvar iy;\n\tvar m;\n\tvar i;\n\n\tdot = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn dot;\n\t}\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tdot += x[ i ] * y[ i ];\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn dot;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tdot += ( x[ i ] * y[ i ] ) + ( x[ i+1 ] * y[ i+1 ] ) + ( x[ i+2 ] * y[ i+2 ] ) + ( x[ i+3 ] * y[ i+3 ] ) + ( x[ i+4 ] * y[ i+4 ] ); // eslint-disable-line max-len\n\t\t}\n\t\treturn dot;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = ( 1-N ) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = ( 1-N ) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tdot += ( x[ ix ] * y[ iy ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn dot;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ddot;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 5;\n\n\n// MAIN //\n\n/**\n* Computes the dot product of `x` and `y`.\n*\n* @param {integer} N - number of values over which to compute the dot product\n* @param {Float64Array} x - first input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @param {Float64Array} y - second input array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting index for `y`\n* @returns {number} dot product of `x` and `y`\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n*\n* var x = new Float64Array( [ 4.0, 2.0, -3.0, 5.0, -1.0 ] );\n* var y = new Float64Array( [ 2.0, 6.0, -1.0, -4.0, 8.0 ] );\n*\n* var z = ddot( x.length, x, 1, 0, y, 1, 0 );\n* // returns -5.0\n*/\nfunction ddot( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar dot;\n\tvar ix;\n\tvar iy;\n\tvar m;\n\tvar i;\n\n\tdot = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn dot;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tdot += ( x[ ix ] * y[ iy ] );\n\t\t\t\tix += 1;\n\t\t\t\tiy += 1;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn dot;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tdot += ( x[ ix ] * y[ iy ] ) + ( x[ ix+1 ] * y[ iy+1 ] ) + ( x[ ix+2 ] * y[ iy+2 ] ) + ( x[ ix+3 ] * y[ iy+3 ] ) + ( x[ ix+4 ] * y[ iy+4 ] ); // eslint-disable-line max-len\n\t\t\tix += M;\n\t\t\tiy += M;\n\t\t}\n\t\treturn dot;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tdot += x[ ix ] * y[ iy ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn dot;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ddot;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar ddot = require( './ddot.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( ddot, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = ddot;\n"],"names":["M","ddot","ndarray","main","require$$0","N","x","strideX","y","strideY","ix","iy","m","i","dot","offsetX","offsetY"],"mappings":";;IAsBIA,ECAAA,ECCJC,EACAC,EAUAC,mHFZIH,EAAI,ECAJA,EAAI,ECARI,EACAH,EFuBA,SAAeI,EAAGC,EAAGC,EAASC,EAAGC,GAAjC,IAEKC,EACAC,EACAC,EACAC,EAJAC,EAME,EACN,GAAKT,GAAK,EACT,OAAOS,EAGR,GAAiB,IAAZP,GAA6B,IAAZE,EAAgB,CAIrC,IAHAG,EAAIP,EAAIL,GAGC,EACR,IAAMa,EAAI,EAAGA,EAAID,EAAGC,IACnBC,GAAOR,EAAGO,GAAML,EAAGK,GAGrB,GAAKR,EAAIL,EACR,OAAOc,EAER,IAAMD,EAAID,EAAGC,EAAIR,EAAGQ,GAAKb,EACxBc,GAASR,EAAGO,GAAML,EAAGK,GAAUP,EAAGO,EAAE,GAAML,EAAGK,EAAE,GAAUP,EAAGO,EAAE,GAAML,EAAGK,EAAE,GAAUP,EAAGO,EAAE,GAAML,EAAGK,EAAE,GAAUP,EAAGO,EAAE,GAAML,EAAGK,EAAE,GAE9H,OAAOC,EAYR,IATCJ,EADIH,EAAU,GACP,EAAEF,GAAME,EAEV,EAGLI,EADIF,EAAU,GACP,EAAEJ,GAAMI,EAEV,EAEAI,EAAI,EAAGA,EAAIR,EAAGQ,IACnBC,GAASR,EAAGI,GAAOF,EAAGG,GACtBD,GAAMH,EACNI,GAAMF,EAEP,OAAOK,GE7DR,UALAZ,EDwBA,SAAeG,EAAGC,EAAGC,EAASQ,EAASP,EAAGC,EAASO,GAAnD,IAEKN,EACAC,EACAC,EACAC,EAJAC,EAME,EACN,GAAKT,GAAK,EACT,OAAOS,EAMR,GAJAJ,EAAKK,EACLJ,EAAKK,EAGY,IAAZT,GAA6B,IAAZE,EAAgB,CAIrC,IAHAG,EAAIP,EAAIL,GAGC,EACR,IAAMa,EAAI,EAAGA,EAAID,EAAGC,IACnBC,GAASR,EAAGI,GAAOF,EAAGG,GACtBD,GAAM,EACNC,GAAM,EAGR,GAAKN,EAAIL,EACR,OAAOc,EAER,IAAMD,EAAID,EAAGC,EAAIR,EAAGQ,GAAKb,EACxBc,GAASR,EAAGI,GAAOF,EAAGG,GAAWL,EAAGI,EAAG,GAAMF,EAAGG,EAAG,GAAUL,EAAGI,EAAG,GAAMF,EAAGG,EAAG,GAAUL,EAAGI,EAAG,GAAMF,EAAGG,EAAG,GAAUL,EAAGI,EAAG,GAAMF,EAAGG,EAAG,GACvID,GAAMV,EACNW,GAAMX,EAEP,OAAOc,EAER,IAAMD,EAAI,EAAGA,EAAIR,EAAGQ,IACnBC,GAAOR,EAAGI,GAAOF,EAAGG,GACpBD,GAAMH,EACNI,GAAMF,EAEP,OAAOK,ICvDRX,EAAAF"}